{
	"info": {
		"_postman_id": "ec7c6d56-1410-44e1-a514-1d46571a5921",
		"name": "Users",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25125664"
	},
	"item": [
		{
			"name": "get all",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// check if the response status is 200 (OK)\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// check if the response contains an array of users\r",
							"pm.test(\"Response should contain an array of users\", function () {\r",
							"    const users = pm.response.json();\r",
							"    pm.expect(users).to.be.an('array');\r",
							"    pm.expect(users.length).to.be.above(0); // check whether there is atleast one user\r",
							"});\r",
							"\r",
							"// check if each user object in the response has the required fields \r",
							"pm.test(\"Each user object should have required fields\", function () {\r",
							"    const users = pm.response.json();\r",
							"    users.forEach(function(user) {\r",
							"        pm.expect(user).to.have.property('FirstName');\r",
							"        pm.expect(user).to.have.property('LastName');\r",
							"        pm.expect(user).to.have.property('Email');\r",
							"        pm.expect(user).to.have.property('PhoneNumber');\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3001/users/get/all",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"users",
						"get",
						"all"
					]
				}
			},
			"response": [
				{
					"name": "get all",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/users/get/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"users",
								"get",
								"all"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "335"
						},
						{
							"key": "ETag",
							"value": "W/\"14f-2znytwZzkYrpDfwUj62vZ8Izhao\""
						},
						{
							"key": "Date",
							"value": "Wed, 13 Sep 2023 12:19:28 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"userId\": 18,\n        \"FirstName\": \"Dave\",\n        \"LastName\": \"Johnson\",\n        \"Email\": \"daveJohnson@gmail.com\",\n        \"PhoneNumber\": \"766324527\"\n    },\n    {\n        \"userId\": 19,\n        \"FirstName\": \"Crimston\",\n        \"LastName\": \"Smith\",\n        \"Email\": \"crimstonSmith@gmail.com\",\n        \"PhoneNumber\": \"079652432\"\n    },\n    {\n        \"userId\": 20,\n        \"FirstName\": \"Mark\",\n        \"LastName\": \"Jane\",\n        \"Email\": \"markJane@gmail.com\",\n        \"PhoneNumber\": \"096352722\"\n    }\n]"
				}
			]
		},
		{
			"name": "get",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// check if the response status is 200 (OK)\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// check if the response contains a message property\r",
							"pm.test(\"Response should have a 'message' property\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property('message');\r",
							"});\r",
							"\r",
							"// check if the response contains a user property\r",
							"pm.test(\"Response should have a 'user' property\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property('user');\r",
							"});\r",
							"\r",
							"// check if the user property has the required fields \r",
							"pm.test(\"User object should have required fields\", function () {\r",
							"    const user = pm.response.json().user;\r",
							"    pm.expect(user).to.have.property('FirstName');\r",
							"    pm.expect(user).to.have.property('LastName');\r",
							"    pm.expect(user).to.have.property('Email');\r",
							"    pm.expect(user).to.have.property('PhoneNumber');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3001/users/get/18",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"users",
						"get",
						"18"
					]
				}
			},
			"response": [
				{
					"name": "get",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/users/get/18",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"users",
								"get",
								"18"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "161"
						},
						{
							"key": "ETag",
							"value": "W/\"a1-iN2uFFMx85s/CGYKGDRcaqpQXhQ\""
						},
						{
							"key": "Date",
							"value": "Wed, 13 Sep 2023 12:20:10 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"User  Retrieved successfully\",\n    \"user\": {\n        \"userId\": 18,\n        \"FirstName\": \"Dave\",\n        \"LastName\": \"Johnson\",\n        \"Email\": \"daveJohnson@gmail.com\",\n        \"PhoneNumber\": \"766324527\"\n    }\n}"
				}
			]
		},
		{
			"name": "create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// check if the response status is 201 (Created)\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"// check if the response contains a message property\r",
							"pm.test(\"Response should have a 'message' property\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property('message');\r",
							"});\r",
							"\r",
							"// check if the response contains a user property\r",
							"pm.test(\"Response should have a 'user' property\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property('user');\r",
							"});\r",
							"\r",
							"// check if the user property has the required fields\r",
							"pm.test(\"User object should have required fields\", function () {\r",
							"    const user = pm.response.json().user;\r",
							"    pm.expect(user).to.have.property('FirstName');\r",
							"    pm.expect(user).to.have.property('LastName');\r",
							"    pm.expect(user).to.have.property('Email');\r",
							"    pm.expect(user).to.have.property('PhoneNumber');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"FirstName\":\"Anne\",\r\n    \"LastName\":\"Chopra\",\r\n    \"Email\":\"anneChopra@gmail.com\",\r\n    \"PhoneNumber\":\"446787898\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/users/create",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"users",
						"create"
					]
				}
			},
			"response": [
				{
					"name": "create",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"FirstName\":\"Anne\",\r\n    \"LastName\":\"Chopra\",\r\n    \"Email\":\"anneChopra@gmail.com\",\r\n    \"PhoneNumber\":\"446787898\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/users/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"users",
								"create"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "156"
						},
						{
							"key": "ETag",
							"value": "W/\"9c-wrgAgHSDrsIivw9NV0GLKJ+YbiU\""
						},
						{
							"key": "Date",
							"value": "Wed, 13 Sep 2023 12:23:01 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"User created Successfully\",\n    \"user\": {\n        \"userId\": 21,\n        \"FirstName\": \"Anne\",\n        \"LastName\": \"Chopra\",\n        \"Email\": \"anneChopra@gmail.com\",\n        \"PhoneNumber\": \"446787898\"\n    }\n}"
				}
			]
		},
		{
			"name": "update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// check if the response status is 200 (OK)\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// check if the response contains a message property\r",
							"pm.test(\"Response should have a 'message' property\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property('message');\r",
							"});\r",
							"\r",
							"// check if the response contains an updatedUser property\r",
							"pm.test(\"Response should have an 'updatedUser' property\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property('updatedUser');\r",
							"});\r",
							"\r",
							"// check if the 'updatedUser' property has the required fields\r",
							"pm.test(\"Updated user object should have required fields\", function () {\r",
							"    const updatedUser = pm.response.json().updatedUser;\r",
							"    pm.expect(updatedUser).to.have.property('FirstName');\r",
							"    pm.expect(updatedUser).to.have.property('LastName');\r",
							"    pm.expect(updatedUser).to.have.property('Email');\r",
							"    pm.expect(updatedUser).to.have.property('PhoneNumber');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\":19,\r\n    \"FirstName\":\"Tom\",\r\n    \"LastName\":\"Holland\",\r\n    \"Email\":\"tomHollandh@gmail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/users/update",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"users",
						"update"
					]
				}
			},
			"response": [
				{
					"name": "update",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\":19,\r\n    \"FirstName\":\"Tom\",\r\n    \"LastName\":\"Holland\",\r\n    \"Email\":\"tomHollandh@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/users/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"users",
								"update"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "172"
						},
						{
							"key": "ETag",
							"value": "W/\"ac-+4QGwsISb1wHwrrZ5agFrEoJY3Y\""
						},
						{
							"key": "Date",
							"value": "Wed, 13 Sep 2023 12:23:17 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"User details updated successfully\",\n    \"updatedUser\": {\n        \"userId\": 19,\n        \"FirstName\": \"Tom\",\n        \"LastName\": \"Holland\",\n        \"Email\": \"tomHollandh@gmail.com\",\n        \"PhoneNumber\": \"079652432\"\n    }\n}"
				}
			]
		},
		{
			"name": "delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Check if the response status is 200 (OK)\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Check if the response contains a 'message' property\r",
							"pm.test(\"Response should have a 'message' property\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property('message');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\":20\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/users/delete",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"users",
						"delete"
					]
				}
			},
			"response": [
				{
					"name": "delete",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\":20\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/users/delete",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"users",
								"delete"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "39"
						},
						{
							"key": "ETag",
							"value": "W/\"27-XfcINSSgfabDxGSKtlNiiTF6cZw\""
						},
						{
							"key": "Date",
							"value": "Wed, 13 Sep 2023 12:24:45 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"User removed successfully\"\n}"
				}
			]
		}
	]
}